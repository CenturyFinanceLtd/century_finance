/* 1.1 Theme Reset Style */
html {
    font-size: $base-font-size + px;
}
:root {
    scroll-behavior: unset;
}
body {
    font-family: $base-font;
    color:$body-color;
    background-color: $body-bg-color;
    font-size: 18px;
    overflow-x: hidden;
    @include media-query( 767px ) {
        font-size: 14px;
    }
}

p {
    font-size: 18px;
    color: $body-color;
    line-height: 1.8em;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    color: $heading-color;
    font-family: $heading-font;
    font-weight: 500;
}

ul {
    padding-left: 0;
    margin: 0;
    list-style: none;
}

a {
    text-decoration: none;
    @include transition-time(0.2s);
}

a:hover {
    text-decoration: none;
}

img{
    max-width: 100%;
}

.hidden{
    display: none;
}

.sr-only {
    display: none !important;
    opacity: 0;
    visibility: hidden;
}

/* 1.2 Global Elements */
.page-wrapper {
    position: relative;
    overflow: hidden;
}

.App {
    position: relative;
    overflow: hidden; 
}

.wow {
    visibility: hidden;
}

.fi:before {
    margin: 0;
}

.section-padding {
    padding: px 0;

    @include media-query( 991px ) {
        padding: 90px 0;
    }
    @include media-query( 767px ) {
        padding: 80px 0;
    }
}
.pt-100 {
    padding-top: 100px;

    @include media-query( 991px ) {
        padding-top: 80px;
    }
    @include media-query( 767px ) {
        padding-top: 70px;
    }
}


/*** contact form error handling ***/
.contact-validation-active {
    .error-handling-messages {
        width: 100% !important;
        margin-top: 15px !important;
    }

    label.error {
        color: red;
        font-weight: normal;
        margin: 5px 0 0 0;
        text-align: left;
        display: block;
    }

    #c-loader,
    #loader {
        display: none;
        margin-top: 10px;

        i {
            font-size: 30px;
            color: $theme-primary-color;
            display: inline-block;
            -webkit-animation: rotating linear 2s infinite;
            animation: rotating linear 2s infinite;
        }
    }

    #success,
    #c-success,
    #c-error,
    #error {
        width: 100%;
        color: $white;
        padding: 5px 10px;
        font-size: 16px;
        text-align: center;
        display: none;

        @include media-query(767px)  {
            font-size: 15px;
        }
    }

    #c-success,
    #success {
        background-color: lighten(green, 5%);
        border-left: 5px solid green;
        margin-bottom: 5px;
    }

    #c-error,
    #error {
        background-color: lighten(red, 5%);
        border-left: 5px solid red;
    }
}

@-webkit-keyframes rotating {
    from {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }

    to {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
    }
}

@keyframes rotating {
    from {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }

    to {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
    }
}

.rotating {
  -webkit-animation: rotating 5s alternate infinite;
  animation: rotating 5s alternate infinite;
}


/*** back to top **/
.back-to-top {
    background-color: transparentize($theme-primary-color, 0.3);
    width: 45px;
    height: 45px;
    line-height: 45px;
    border: 2px solid $theme-primary-color;
    border-radius: 45px;
    text-align: center;
    display: none;
    position: fixed;
    z-index: 999;
    right: 15px;
    bottom: 15px;
    @include transition-time(0.2s);

    @include media-query(991px) {
        width: 35px;
        height: 35px;
        line-height: 35px;
    }

    &:hover {
        background-color: $theme-primary-color;
    }
}

.back-to-top i {
    font-size: 18px;
    color: #fff;
    position: absolute;
    left: 50%;
    top: 50%;
    @include center-by-translating();
}


/** for popup image ***/
.mfp-wrap {
    background-color: transparentize($black, 0.1);
    z-index: 99999;
}

.mfp-with-zoom .mfp-container,
.mfp-with-zoom.mfp-bg {
    opacity: 0;
    -webkit-backface-visibility: hidden;
    -webkit-transition: all 0.3s ease-out;
    -moz-transition: all 0.3s ease-out;
    -o-transition: all 0.3s ease-out;
    transition: all 0.3s ease-out;
}

.mfp-with-zoom.mfp-ready .mfp-container {
    opacity: 1;
}
.mfp-with-zoom.mfp-ready.mfp-bg {
    opacity: 0.8;
}

.mfp-with-zoom.mfp-removing .mfp-container,
.mfp-with-zoom.mfp-removing.mfp-bg {
    opacity: 0;
}

/*** for fancybox video ***/
.fancybox-overlay {
  background: rgba(0, 0, 0, 0.9);
  z-index: 9999 !important;
}

.fancybox-wrap {
  z-index: 99999 !important;
}




/* Basic styling for the slider section and images */
.hero-slider-section { /* Common class for both slider containers */
    width: 100%;
    overflow: hidden; /* Good practice for sliders */
  }
  
  .slide-item {
    width: 100%; /* Ensure slide item takes full width */
    outline: none; /* Remove outline on focused slide */
  }
  
  .hero-image-container {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    /* Adjust height as needed. Can be fixed or responsive. */
    /* min-height: 300px; */ /* Example minimum height */
    /* max-height: 80vh; */ /* Example maximum height relative to viewport */
  }
  
  .hero-banner-image {
    width: 100%;            /* Make image responsive within its container */
    height: auto;           /* Maintain aspect ratio by default */
    // max-height: 50vh;       /* Example: Prevent image from being excessively tall on large screens */
    object-fit: cover;      /* 'cover' will fill the container, cropping if necessary. */
                             /* Use 'contain' to show the whole image, which might leave empty space. */
    display: block;         /* Remove extra space below image */
  }
  
  /* --- Visibility Rules for Desktop vs. Mobile SLIDER CONTAINERS --- */
  
  /* By default (desktop-first approach), hide the mobile slider container */
  section.hero-slider-section.mobile-slider-container {
    display: none !important;
  }
  
  /* Ensure the desktop slider container is shown by default */
  section.hero-slider-section.desktop-slider-container {
    display: block !important; /* Or 'flex' if its internal layout requires it */
  }
  
  /* Mobile View: Show mobile slider container, hide desktop slider container */
  /* User's breakpoint: 499px */
  @media (max-width: 499px) {
    section.hero-slider-section.desktop-slider-container {
      display: none !important; /* Fixed: Added !important to ensure override */
    }
    section.hero-slider-section.mobile-slider-container {
      display: block !important;
    }
  
    /* Optional: Adjust image height or other styles specifically for mobile images */
    /* This rule will apply to images within the .mobile-slider-container */
    .mobile-slider-container .hero-banner-image {
      // max-height: 30vh; /* Example: Shorter max height for mobile images */
    }
    /* If desktop images also need different styling on desktop, you can add: */
    /* .desktop-slider-container .hero-banner-image { max-height: 70vh; } */
    /* (though it's already set globally above) */
  }
  
  /* Slick Carousel Specifics to ensure proper display and prevent common issues */
  /* It's good to have these base slick styles if you're not using the full slick-theme.css */
  /* or if you need to override them. */
  
  .slick-slider {
    position: relative;
    display: block;
    box-sizing: border-box;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    -webkit-touch-callout: none;
    -khtml-user-select: none;
    touch-action: pan-y;
    -webkit-tap-highlight-color: transparent;
  }
  
  .slick-list { /* The track container */
    position: relative;
    display: block;
    overflow: hidden; /* This is important */
    margin: 0;
    padding: 0;
  }
  .slick-list:focus {
    outline: none;
  }
  .slick-list.dragging {
    cursor: pointer;
    /* cursor: hand; */ /* 'hand' is deprecated, use 'pointer' */
  }
  
  .slick-track { /* The wrapper for all slides */
    position: relative;
    top: 0;
    left: 0;
    display: block !important; /* Ensures slides are laid out correctly by slick */
    margin-left: auto;
    margin-right: auto;
  }
  .slick-track:before,
  .slick-track:after {
    display: table;
    content: '';
  }
  .slick-track:after {
    clear: both;
  }
  .slick-loading .slick-track {
    visibility: hidden;
  }
  
  .slick-slide { /* Individual slide wrapper created by slick */
    float: left; /* Critical for horizontal layout */
    height: 100%;
    min-height: 1px;
    /* display: none; */ /* This is NOT needed here anymore as visibility is on parent */
  }
  [dir='rtl'] .slick-slide {
    float: right;
  }
  .slick-slide img {
    display: block; /* Good practice for images within slides */
  }
  .slick-slide.slick-loading img {
    display: none;
  }
  .slick-slide.dragging img {
    pointer-events: none;
  }
  .slick-initialized .slick-slide {
     display: block; /* This ensures slides inside an active slider are visible */
  }
  .slick-loading .slick-slide {
    visibility: hidden;
  }
  .slick-vertical .slick-slide {
    display: block;
    height: auto;
    border: 1px solid transparent;
  }
  .slick-arrow.slick-hidden {
    display: none;
  }
  
  /* Ensure the direct child div of .slick-slide (which slick adds) takes up full space */
  .slick-slide > div {
    height: 100%;
    width: 100%;
  }
  
  /* Basic styling for default arrows (if arrows: true and not using custom ones) */
  /* You would typically get these from slick-theme.css or define your own. */
  .slick-prev,
  .slick-next {
    font-size: 0;
    line-height: 0;
    position: absolute;
    top: 50%;
    display: block;
    width: 20px;
    height: 20px;
    padding: 0;
    -webkit-transform: translate(0, -50%);
    -ms-transform: translate(0, -50%);
    transform: translate(0, -50%);
    cursor: pointer;
    color: transparent;
    border: none;
    outline: none;
    background: transparent;
    z-index: 1; /* Ensure arrows are above slides */
  }
  .slick-prev:hover,
  .slick-prev:focus,
  .slick-next:hover,
  .slick-next:focus {
    color: transparent;
    outline: none;
    background: transparent;
  }
  .slick-prev:before,
  .slick-next:before {
    font-family: 'slick'; /* Default slick font for arrows */
    font-size: 20px;
    line-height: 1;
    opacity: .75;
    color: white; /* Example color, change as needed */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-shadow: 0 0 2px rgba(0,0,0,0.5); /* Example shadow for better visibility on light images */
  }
  .slick-prev {
    left: 25px; /* Adjust position from edge */
  }
  [dir='rtl'] .slick-prev {
    right: 25px;
    left: auto;
  }
  .slick-prev:before {
    content: '←'; /* Default left arrow */
  }
  [dir='rtl'] .slick-prev:before {
    content: '→';
  }
  
  .slick-next {
    right: 25px; /* Adjust position from edge */
  }
  [dir='rtl'] .slick-next {
    left: 25px;
    right: auto;
  }
  .slick-next:before {
    content: '→'; /* Default right arrow */
  }
  [dir='rtl'] .slick-next:before {
    content: '←';
  }
  
  /* Basic styling for dots (if dots: true) */
  .slick-dots {
    position: absolute;
    bottom: 10px; /* Adjust position from bottom */
    display: block;
    width: 100%;
    padding: 0;
    margin: 0;
    list-style: none;
    text-align: center;
  }
  .slick-dots li {
    position: relative;
    display: inline-block;
    width: 20px;
    height: 20px;
    margin: 0 5px;
    padding: 0;
    cursor: pointer;
  }
  .slick-dots li button {
    font-size: 0;
    line-height: 0;
    display: block;
    width: 20px;
    height: 20px;
    padding: 5px;
    cursor: pointer;
    color: transparent;
    border: 0;
    outline: none;
    background: transparent;
  }
  .slick-dots li button:hover,
  .slick-dots li button:focus {
    outline: none;
  }
  .slick-dots li button:before {
    font-family: 'slick'; /* Default slick font for dots */
    font-size: 10px; /* Adjust dot size */
    line-height: 20px;
    position: absolute;
    top: 0;
    left: 0;
    width: 20px;
    height: 20px;
    content: '•'; /* Default dot character */
    text-align: center;
    opacity: .5; /* Increased opacity for better visibility */
    color: white; /* Example color, change as needed */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-shadow: 0 0 2px rgba(0,0,0,0.5); /* Example shadow for better visibility */
  }
  .slick-dots li.slick-active button:before {
    opacity: .95; /* Increased opacity for active dot */
    color: white; /* Example active dot color */
  }